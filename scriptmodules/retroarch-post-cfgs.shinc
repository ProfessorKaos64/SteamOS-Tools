#!/bin/bash

# -------------------------------------------------------------------------------
# Author:     		Michael DeGuzis
# Git:		    	https://github.com/ProfessorKaos64/SteamOS-Tools
# Scipt Name:		retroarch_post_cfgs.shinc
# Script Ver:	  	0.2.3
# Description:		Performs post install cfgs of Retroarch
#
# -------------------------------------------------------------------------------

rpc_configure_retroarch()
{
	# Vars exported emu-from-source.shinc
	#echo "install_dir is $install_dir"
	#echo "git_dir is $git_dir"
	#echo "git_url is $git_url"
	#echo "symlink_target is $symlink_target"
	#echo "binary_loc is $binary_loc"

	#################################################
	# configurations for Retroarch or libretro 
	#################################################
	
	echo -e "\n==> Linking Retroarch to /usr/bin/retroarch"
	sleep 1s
	
	#################################################
	# Linking
	#################################################
	
	# remove old symlink if it exists
	if [[ -f "$symlink_target" ]]; then
		sudo rm -f "$symlink_target"
	else
		# symlink 'retrarch' for now until build flags are implemented
		sudo ln -s "$binary_loc" "$symlink_target"
	fi
	
	#################################################
	# Configure default ROM dir (on user input?)
	#################################################
	# TODO
	
	#################################################
	# set vars
	#################################################
	
	echo -e "\n==> Configuring paths..."
	sleep 1s
	
	#old_libretro_loc=$(echo "# libretro_path = "/path/to/libretro.so"")
	#new_libretro_loc=$(echo "libretro_path = "/path/to/libretro.so"")
	old_core_loc=$(echo "# libretro_directory =")
	new_core_loc=$(echo "libretro_directory = "/home/desktop/retroarch-src/libretro-super"")
	
	# resolution
	old_res_x="# video_fullscreen_x = 0"
	new_res_x="video_fullscreen_x = 0"
	old_res_y="# video_fullscreen_y = 0"
	new_res_y="video_fullscreen_y = 0"
	fullscreen_old="# video_fullscreen = false"
	fullscreen_new="video fullscreen = true"
	
	# the retroarch config file needs to be placed in the steam users dir so that
	# the running retroarch application can access it freely while steamcompmgr is running
	retroarch_cfg_loc_steam="/home/steam/.config/retroarch"
	retroarch_cfg_loc_desktop="/home/steam/.config/retroarch"
	
	#################################################
	# Directories 
	#################################################
	
	# create retroarch dirs if they don't exist already
	if [[ -d "$retroarch_cfg_loc_steam" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		mkdir -p "$retroarch_cfg_loc_desktop"
		sudo mkdir -p "$retroarch_cfg_loc_steam"
	fi
	
	#################################################
	# Application parameters 
	#################################################
	
	echo -e "\n==> Configuring Retorarch parameters..."
	sleep 1s
	
	# actively swap out lines after copying skel config file
	# copy to both desktop and steam users in case it is launched in either session
	# sudo likely needed to copy to /home/steam from desktop user login
	cp "$scriptdir/cfgs/retroarch-skel.cfg" "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo cp "$scriptdir/cfgs/retroarch-skel.cfg" "$retroarch_cfg_loc_steam/retroarch.cfg"
	
	# Configre retroarch paths
	sed -i 's|$old_core_loc|$new_core_loc|g' "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo sed -i 's|$old_core_loc|$new_core_loc|g' "$retroarch_cfg_loc_steam/retroarch.cfg"
	
	# Allow client to be fullscreen
	sudo sed -i 's|$old_res_x|$new_res_x|g' "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo sed -i 's|$old_res_y|$new_res_y|g' "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo sed -i 's|$old_res_x|$new_res_x|g' "$retroarch_cfg_loc_steam/retroarch.cfg"
	sudo sed -i 's|$old_res_y|$new_res_y|g' "$retroarch_cfg_loc_steam/retroarch.cfg"
	
	sudo sed -i 's|$fullscreen_old|$fullscreen_new|g' "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo sed -i 's|$fullscreen_old|$fullscreen_new|g' "$retroarch_cfg_loc_desktop/retroarch.cfg"
	
	# create desktop application link 
	sudo cp "$scriptdir/cfgs/retroarch.dekstop" "/usr/share/applications"
	
	# add small launcher script
	# this will acively swap out the current user (desktop or steam) so that the
	# appropriate retroarch.cfg file will be user
	sudo cp "$scriptdir/cfgs/retroarch-launch.sh" "/usrbin"
	
	#################################################
	# Preconfigure controllers for Retroarch?
	#################################################
	# <<TODO>>
	# Possibly source in separate module
	
	#################################################
	# Automatically add Retroarch program into Steam?
	#################################################
	
	# May not be possible
	# If not, generate notice to user to add as "non-Steam game"
	# <<TODO>>

	#################################################
	# Cleanup
	#################################################
}
