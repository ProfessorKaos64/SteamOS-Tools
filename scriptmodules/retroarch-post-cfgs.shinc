#!/bin/bash

# -------------------------------------------------------------------------------
# Author:     		Michael DeGuzis
# Git:		    	https://github.com/ProfessorKaos64/SteamOS-Tools
# Scipt Name:		retroarch_post_cfgs.shinc
# Script Ver:	  	0.2.5
# Description:		Performs post install cfgs of Retroarch
#
# -------------------------------------------------------------------------------

rpc_configure_retroarch()
{
	# Vars exported emu-from-source.shinc
	#echo "install_dir is $install_dir"
	#echo "git_dir is $git_dir"
	#echo "git_url is $git_url"
	#echo "symlink_target is $symlink_target"
	#echo "binary_loc is $binary_loc"
	#echo "core location is $core_loc"

	#################################################
	# configurations for Retroarch or libretro 
	#################################################
	
	echo -e "\n==> Linking Retroarch to /usr/bin/retroarch"
	sleep 1s
	
	#################################################
	# Linking
	#################################################
	
	# remove old symlink
	sudo rm -f "$symlink_target"
	# symlink 'retrarch' for now until build flags are implemented
	sudo ln -s "$binary_loc" "$symlink_target"
	
	#################################################
	# Configure default ROM dir (on user input?)
	#################################################
	# TODO
	
	#################################################
	# set vars
	#################################################
	
	echo -e "\n==> Configuring paths..."
	sleep 1s
	
	# home paths
	steam_home="/home/steam"
	desktop_home="/home/desktop"
	
	# cores
	core_loc="/usr/lib/libretro"
	core_info_dir="/usr/lib/libretro/info"
	
	# save DIRs
	save_loc_desktop="/home/desktop/retroarch-saves"
	save_loc_steam="/home/steam/retroarch-saves"
	
	# the retroarch config file needs to be placed in the steam users dir so that
	# the running retroarch application can access it freely while steamcompmgr is running
	retroarch_cfg_loc_steam="/home/steam/.config/retroarch"
	retroarch_cfg_loc_desktop="/home/desktop/.config/retroarch"
	
	# other directories
	roms_dir_desktop="/home/desktop/ROMs"
	roms_dir_steam="/home/steam/ROMs"
	banner_dir_desktop="/home/desktop/Pictures"
	banner_dir_steam="/home/steam/Pictures"
	
	#################################################
	# Directories 
	#################################################
	
	# create retroarch dirs if they don't exist already
	if [[ -d "$retroarch_cfg_loc_steam" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		mkdir -p "$retroarch_cfg_loc_desktop"
		sudo mkdir -p "$retroarch_cfg_loc_steam"
	fi
	
	# create ROMs dirs if it don't exist already
	if [[ -d "$roms_dir_desktop" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		mkdir -p "$roms_dir_desktop"
	fi
	
	# create ROMs dirs if it don't exist already
	if [[ -d "$roms_dir_steam" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		sudo mkdir -p "$roms_dir_steam"
	fi
	
	# create Core/Core info dirs if it don't exist already
	if [[ -d "$core_info_dir" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		sudo mkdir -p "$core_info_dir"
	fi
	
	# save dir desktop
	if [[ -d "$save_loc_desktop" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		mkdir -p "$save_loc_desktop"
	fi
	
	# save dir steam
	if [[ -d "$save_loc_steam" ]]; then
		# do nothing
		echo "" > /dev/null
	else
		# create directory(s)
		sudo mkdir -p "$save_loc_steam"
	fi
	
	#################################################
	# Application parameters 
	#################################################
	
	echo -e "\n==> Configuring Retorarch parameters..."
	sleep 1s
	
	# copy skel file for use if need be later
	cp "$scriptdir/cfgs/retroarch/retroarch-skel.cfg" "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo cp "$scriptdir/cfgs/retroarch/retroarch-skel.cfg" "$retroarch_cfg_loc_steam/retroarch.cfg"
	
	# prompt user if they would like to load a controller config
	echo -e "\nPlease choose a gamepad profile: \n"
	echo "(1) Xbox 360 gamepad"
	echo "(2) Sony PS3 (wired) gamepad"
	echo "(3) Sony PS3 (bluetooth) gamepad"
	echo "(4) None"
	echo ""
	
	read -ep "Choice: " gp_choice
	
	case "$gp_choice" in
	        1)
	        # copy modified retroarch.cfg to user DIRs without gamepad config
		cp "$scriptdir/cfgs/retroarch/retroarch-xbox360-wired.cfg" "$retroarch_cfg_loc_desktop/retroarch.cfg"
		sudo cp "$scriptdir/cfgs/retroarch/retroarch-xbox360-wired.cfg" "$retroarch_cfg_loc_steam/retroarch.cfg"
	        ;;
	         
	        2)
	        echo "coming soon"
	        ;;
	         
	        3)
	        echo "coming soon"
	        ;;
	        
	        4)
	        # copy modified retroarch.cfg to user DIRs without gamepad config
		cp "$scriptdir/retroarch/cfgs/retroarch.cfg" "$retroarch_cfg_loc_desktop/retroarch.cfg"
		sudo cp "$scriptdir/retroarch/cfgs/retroarch.cfg" "$retroarch_cfg_loc_steam/retroarch.cfg"
		;;
	         
	        *)
		echo "Invalid Input, continuing without gamepad config choice."
	        # copy modified retroarch.cfg to user DIRs without gamepad config
		cp "$scriptdir/cfgs/retroarch/retroarch.cfg" "$retroarch_cfg_loc_desktop/retroarch.cfg"
		sudo cp "$scriptdir/retroarch/cfgs/retroarch.cfg" "$retroarch_cfg_loc_steam/retroarch.cfg"
		;;
	esac
	
	# swap home_temp out for each user DIR path
	sed -i "s|home_temp|$desktop_home|g" "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo sed -i "s|home_temp|$steam_home|g" "$retroarch_cfg_loc_steam/retroarch.cfg"
	
	# create desktop application link 
	sudo cp "$scriptdir/cfgs/retroarch/retroarch.desktop" "/usr/share/applications"
	
	# copy banner image
	cp "$scriptdir/extra/retroarch/retro-arch-logo.png" "$banner_dir_desktop"
	sudo cp "$scriptdir/extra/retroarch/retro-arch-logo.png" "$banner_dir_steam"
	
	# add small launcher script
	# this will acively swap out the current user (desktop or steam) so that the
	# appropriate retroarch.cfg file will be user
	sudo cp "$scriptdir/cfgs/retroarch/retroarch-launch.sh" "/usr/bin"
	
	# copy cores from source build DIR
	find "/home/desktop/retroarch-src/libretro-super/" -name *.so | xargs sudo cp -t "/usr/lib/libretro" 2> /dev/null
	
	# copy core info from source build DIR
	find "/home/desktop/retroarch-src/libretro-super/dist/info" -name *.info | xargs sudo cp -t "/usr/lib/libretro/info" 2> /dev/null

	#################################################
	# Permissions
	#################################################

	# Fix retroarch.cfg permissions
	sudo chown desktop:desktop "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo chown steam:steam "$retroarch_cfg_loc_steam/retroarch.cfg"
	sudo chmod 755 "$retroarch_cfg_loc_desktop/retroarch.cfg"
	sudo chmod 755 "$retroarch_cfg_loc_steam/retroarch.cfg"
	
	# Fix saves permissions
	sudo chown desktop:desktop "$save_loc_desktop"
	sudo chown steam:steam "$save_loc_desktop"
	sudo chmod 755 "$save_loc_desktop"
	sudo chmod 755 "$save_loc_desktop"
	
	# Fix retroarch banner
	sudo chown desktop:desktop "$banner_dir_desktop/retro-arch-logo.png"
	sudo chown steam:steam "$banner_dir_steam/retro-arch-logo.png"

	#################################################
	# Extra
	#################################################
	
	# add icon/thumbnail
	sudo cp "$scriptdir/extra/retroarch/retro-arch-logo.png" "/home/steam/Pictures"
	
	#################################################
	# Automatically add Retroarch program into Steam?
	#################################################
	
	# May not be possible
	# If not, generate notice to user to add as "non-Steam game"
	# <<TODO>>

	echo -e "\n==> Completing post-install actions..."

	echo -e "\nPost install routine is now complete. Please add 'Retroarch-Src' as a \
non-Steam game in Big Picture Mode.\n"
	echo -e "Please see $scriptdir/docs/desktop-software-readme.md for more information\n"
	sleep 1s
	
	#################################################
	# Cleanup
	#################################################
}
