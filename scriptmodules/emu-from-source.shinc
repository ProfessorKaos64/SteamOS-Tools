#!/bin/bash

# -------------------------------------------------------------------------------
# Author:     		Michael DeGuzis
# Git:		  	https://github.com/ProfessorKaos64/SteamOS-Tools
# Scipt Name:		emu-from-source.sh
# Script Ver:	  	0.2.1
# Description:		script to install emulation softare as a 
#                 	part of install-debian-software.sh
#
#			See: https://wiki.debian.org/CreatePackageFromPPA
# Usage:	  	N/A, called from another script
#
# Note:			$build_opts can be specified to alter script
# -------------------------------------------------------------------------------

efs_main()
{
	
	# Warn user this will take some time
	echo -e "Building Retroarch and it's associated cores will take some time. Please wait or \
press CTRL+C now."
	echo -e "\nPress Enter to continue\n"
	
	read -n 1 
	printf "\nContinuing...\n" 
	clear 

	install_dir="/home/desktop/retroarch-src"
	git_dir="/home/desktop/retroarch-src/libretro-super"
  
	# clone and fetch libretro
	#git clone git://github.com/libretro/libretro-super.git
	#cd libretro-super
	#./libretro-fetch.sh
	
	# build
	# efs_build_ra
	
	# remove old symlink if it exists
	if [[ -f "/usr/bin/retroarch" ]]; then
		sudo rm -f "/usr/bin/retrorach"
	fi
	
	# if directory retroarch-src exists, remove it
	if [[ -d "$install_dir" ]]; then
		rm -rf "$install_dir"
	fi
	
	# if git folder libretro-super exists, remove it
	if [[ -d "$git_dir" ]]; then
		rm -rf "$git_dir"
	fi
	
	# clone and fetch super build (evaluating currently)
	mkdir -p /home/desktop/retroarch-src
	cd /home/desktop/retroarch-src/
	git clone https://github.com/libretro/libretro-super
	cd libretro-super/
	
	##############################################
	# fetch information
	##############################################
	# until / unless all cores work fine, fetch operations
	# will be manually specified for now
	# See: https://github.com/libretro/libretro-super/blob/master/libretro-build.sh#L91
	
	./libretro-fetch.sh 
	
	##############################################
	# Build player and cores
	##############################################
	
	# build Retroarch
	./retroarch-build.sh 
	
	# If argument is specified, build just that core, if not proceed to the rest
	if [[ "$build_opts" == "$build_opts" ]]; then
		echo -e "Single core fetch and build requested...\n"
		sleep 2s
		./libretro-fetch.sh $build_opts
		./libretro-build.sh $build_opts
	else
	
	# Remove untested, broken, standalone games, or extra cores
	# Uncomment the below sed lines to build ALL cores
	
	##########################
	# disabled cores:
	##########################
	# These mostly include cores that fail to build
	
	sed -i -e '/build_libretro_core bsnes/d' libretro-build.sh 
	sed -i -e '/build_libretro_core bsnes_cplusplus98/d' libretro-build.sh d
	sed -i -e '/build_libretro_core bsnes_mercury/d' libretro-build.sh  

	##########################
	# disabled extra:
	##########################

	sed -i -e '/build_libretro_core ffmpeg/d' libretro-build.sh
	sed -i -e '/build_libretro_test/d' libretro-build.sh
	
	##########################
	# disabled games:
	##########################

	sed -i -e '/build_libretro_core tyrquake/d' libretro-build.sh
	sed -i -e '/build_libretro_core prboom/d' libretro-build.sh
	sed -i -e '/build_libretro_core dinothawr/d' libretro-build.sh
	sed -i -e '/build_libretro_core nxengine/d' libretro-build.sh
	sed -i -e '/build_libretro_core 2048/d' libretro-build.sh
	
	#end $build_opts if test
	fi
	
	##############################################
	# Cleanup
	##############################################
	# symlink 'retrarch' for now until build flags are implemented
	sudo ln -s "$git_dir/retroarch/retroarch" "/usr/bin/retroarch"
	
	# clean up dirs
	#rm -rf "/home/desktop/retroarch-src-git"

}
